name: Hub Submission Validation (R)

on:
  workflow_dispatch:
  pull_request:
    branches: main
    paths:
      - 'model-output/**'
      - 'model-metadata/*'

jobs:
  validate-submission:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: r-lib/actions/setup-r@v2
        with:
          install-r: false
          use-public-rspm: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libv8-dev
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('DESCRIPTION') }}
          restore-keys: ${{ runner.os }}-r-
      - name: Install hubUtils from specific branch
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_github("kjsato/hubUtils@enhancement/v3-utils", upgrade = "never")'
      - name: Install hubData from specific branch
        run: |
          Rscript -e 'remotes::install_github("kjsato/hubData@feature/handle-samples", upgrade = "never")'
      - name: Install hubAdmin from specific branch
        run: |
          Rscript -e 'remotes::install_github("kjsato/hubAdmin@feature/sample-support", upgrade = "never")'
      - name: Install HubValidations
        run: |
          remotes::install_github("kjsato/hubValidations@patch4conversion_origin_date", upgrade = "never")
        shell: Rscript {0}

      - name: Run validations
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          library("hubValidations")
          v <- hubValidations::validate_pr(
              gh_repo = Sys.getenv("GITHUB_REPOSITORY"),
              pr_number = Sys.getenv("PR_NUMBER"),
              skip_submit_window_check = FALSE
          )
          hubValidations::check_for_errors(v)
        shell: Rscript {0}
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes_detected=true" >> $GITHUB_ENV
      
      - name: Commit and push changes
        if: env.changes_detected == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Automatically update files after validation"
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


