name: Hub Submission Validation (R)

on:
  workflow_dispatch:
  pull_request:
    branches: main
    paths:
      - 'model-output/**'
      - 'model-metadata/*'

jobs:
  validate-submission:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with: 
          r-version: '4.4.3'

      - name: Cache R packages
        uses: actions/cache@v3
        with: 
          path: ~/.cache/R
          key: ${{ runner.os }}-r-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            ${{ runner.os }}-r-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev

      - name: Install R packages
        run: |
           Rscript -e 'install.packages("pkgdown")'
           Rscript -e 'install.packages("textshaping")'
           Rscript -e 'install.packages("devtools")'
           Rscript -e 'install.packages("curl")'

      - name: Install hubUtils from specific branch
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_github("kjsato/hubUtils@main-mr_schema", upgrade = "never")'
      - name: Install hubData from specific branch
        run: |
          Rscript -e 'remotes::install_github("kjsato/hubData@main-mr_schema", upgrade = "never")'
      - name: Install hubAdmin from specific branch
        run: |
          Rscript -e 'remotes::install_github("kjsato/hubAdmin@main-mr_schema", upgrade = "never")'
      - name: Install HubValidations
        run: |
          Rscript -e 'remotes::install_github("kjsato/hubValidations@main-mr_schema-conv_origin_date", upgrade = "never")'

      - name: Run validations
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          library("hubValidations")
          v <- hubValidations::validate_pr(
              gh_repo = Sys.getenv("GITHUB_REPOSITORY"),
              pr_number = Sys.getenv("PR_NUMBER"),
              skip_submit_window_check = FALSE
          )
          hubValidations::check_for_errors(v)
        shell: Rscript {0}
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes_detected=true" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.changes_detected == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Automatically update files after validation"
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
